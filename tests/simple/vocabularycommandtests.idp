include <mx>

namespace N {
	vocabulary V {
		p
		q
		r
		f
		type x
		type person
		P(x)
	}
	vocabulary Ve {
		e
	}
	
	vocabulary V2 {
		extern vocabulary V
		g
		extern Ve::e/0
	}

	theory T: V {
		{
			q <- ~~~p.
		}
		~(p | q | r).
	}
	
	structure S: V {
		p = true
		r<cf> = true
		x = {1..3}
		P<ct> = {1;2}
		person = {Dirk;Jos}
	}
}

procedure main() {
	stdoptions.language="idp"
	vocOfS = getvocabulary(N::S)
	if not (tostring(vocOfS)  == tostring(N::V)) then
		return 0
	end
	T2 = clone(N::T)
	S2 = clone(N::S)
	local vocOfS2 = getvocabulary(S2)
	if not (tostring(vocOfS2)  == tostring(N::V)) then
		return 0
	end
	if (tostring(N::V2)  == tostring(N::V)) then
		return 0
	end
	setvocabulary(S2, N::V2)
	local vocOfS2 = getvocabulary(S2)
	if not (tostring(vocOfS2)  == tostring(N::V2)) then
		return 0
	end
	return 1
}