#include <mx>

procedure mxnobounds(){
	stdoptions.groundwithbounds = false
	stdoptions.timeout = 5
	return run()
}

procedure mxnoboundslong(){
	stdoptions.groundwithbounds = false
	stdoptions.timeout = 200
	return run()
}

procedure mxwithbounds(){
	stdoptions.groundwithbounds = true
	stdoptions.timeout = 5
	return run()
}

procedure mxwithcp(){
	stdoptions.cpsupport = true
	stdoptions.groundwithbounds = false
	stdoptions.timeout = 5
	return run()
}

procedure mxwithsymm(){
	stdoptions.timeout = 5
	stdoptions.groundwithbounds = false
	stdoptions.symmetrybreaking = "static"
	return run()
}

procedure run() {
	stdoptions.nbmodels = 0
	solutions = mx::all(T,S)
	io.stderr:write("Found "..#solutions.." models, expected "..getExpectedNbOfModels().." models.\n")
	if(#solutions~=getExpectedNbOfModels()) then
		return 0
	end 
	
	for i,v in ipairs(solutions) do
		if(#modelexpand(T, v)==0) then
			io.stderr:write("Found an invalid solution.\n")
			return 0
		end
	end
	return 1
}
