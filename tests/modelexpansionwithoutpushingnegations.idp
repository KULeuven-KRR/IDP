include <mx>

procedure main() {
	stdoptions.verbosity.grounding=0
	stdoptions.nbmodels = getExpectedNbOfModels()+1
	stdoptions.timeout = 10
	stdoptions.groundwithbounds = false
	stdoptions.liftedunitpropagation = false
	local partialsols = idpintern.modelexpand(clone(T),S)
	local solutions = nbModelsTwoValuedExtensions(partialsols)

	io.stderr:write("Found "..#solutions.." models, expected "..getExpectedNbOfModels().." models.\n")
	if(#solutions~=getExpectedNbOfModels()) then
		return 0
	end 
	
	for i,v in ipairs(solutions) do
		if(#modelexpand(T, v)==0) then
			io.stderr:write("Found an invalid solution.\n")
			return 0
		end
	end
	return 1
}
