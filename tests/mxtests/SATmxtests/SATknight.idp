procedure getExpectedAModel(){
	return true
}

vocabulary V{
	type Row isa int
	type Col isa int
 
	Move(Row,Col,Row,Col)
	Jump(Row,Col,Row,Col)
	Reached(Row,Col)
}

theory T : V { 

	{ Jump(r1,c1,r2,c2) <- abs(r1-r2) = 1 & abs(c1-c2) = 2.
     Jump(r1,c1,r2,c2) <- abs(r1-r2) = 2 & abs(c1-c2) = 1. }

	! r1 c1 r2 c2 : Move(r1,c1,r2,c2) => Jump(r1,c1,r2,c2).
//	! r1 c1 : Row(r1) & Col(c1) => ?1 r2 c2 : Move(r1,c1,r2,c2).
	! r1 c1 r2 c2 r3 c3 : Move(r1,c1,r2,c2) & Move(r1,c1,r3,c3) => r2 = r3 & c2 = c3.


	{ Reached(r,c) <- Move(1,1,r,c).
	  Reached(r,c) <- Reached(ro,co) & Move(ro,co,r,c). }
	! r c : Reached(r,c).

}

structure S : V{ 
	Row = {1..8}
	Col = {1..8}
}
