vocabulary V{
type t
P
Q(t)
R
}

theory T:V{
!t: P | (Q(t) | R).
!t: P <= (Q(t) | R).

}

structure S:V{
	t={1..3}
	P=false
}

procedure weakassertions(newS){
	if  isconsistent(newS)  then
		return	(assertEmpty(newS[V.P].ct,"P<ct>")  and assertNotEmpty(newS[V.P].cf,"P<cf>"))
	else
		return 	  true
	end
	
}

procedure strongassertions(newS){
	return 
		consistent(0,newS)
}
