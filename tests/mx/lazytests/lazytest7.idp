vocabulary V{
	type x isa int
	p(x)
	q(x)
	r(x)
}

theory T: V{
	~r(-1000000).
	q(20056).
	p(120035).
	?x: p(x).
	{
		!x: p(x) <- q(x).
		!x: q(x) <- p(x) | r(x).
	}
}

structure S: V {
	x = {-1000000..1000000}
}

#include <mx>

procedure getsomesols(){
	stdoptions.groundlazy=true
	stdoptions.satverbosity=4
	stdoptions.randomvaluechoice=true
	stdoptions.nrmodels = 1
	return modelexpand(T, S, stdoptions)
}

procedure main(){
	sols = getsomesols()
	for i,sol in pairs(sols)
	do
		mx::printtuples("p<ct>", sol[V::p].ct)
		mx::printtuples("p<cf>", sol[V::p].cf)
		mx::printtuples("q<ct>", sol[V::q].ct)
		mx::printtuples("q<cf>", sol[V::q].cf)
		mx::printtuples("r<ct>", sol[V::r].ct)
		mx::printtuples("r<cf>", sol[V::r].cf)
	end

}
