vocabulary V{
	type partition
	type number isa int
	in(partition, number)
}

theory T: V{
	!n: ?p: in(p, n).
	!p n: in(p, n) => !p2: in(p2, n) => p=p2. // Only this works for delaying by Tseitins atm (as quantors are not shuffled around).
//	!p n p2: in(p, n) & in(p2, n) => p=p2. // Only this allows twin delay detection atm.
}

structure S: V {
	partition = {1..$range}
	number = {1..$domain}
}

#include <mx>

procedure main(tsdelay, satdelay){
	stdoptions.groundlazily= tsdelay or satdelay
	stdoptions.tseitindelay = tsdelay
	stdoptions.satdelay = satdelay
	stdoptions.groundwithbounds=true
	stdoptions.groundverbosity=0
	stdoptions.verbosity.solving=0
	return modelexpandpartial(T, S, stdoptions)
}
