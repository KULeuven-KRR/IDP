#include <mx>
#include <createStructureFromFile>

vocabulary V{
	type Vtx
	Edge(Vtx,Vtx)
	Reaches(Vtx,Vtx) //the query

	Connected
	Path(Vtx, Vtx)
}
theory T:V{
	{
		Path(a,x) <- Edge(a,x).
		Path(a,x) <- Path(a,y) & Edge(y,x).
	}
	Connected <=> ?a b: Reaches(a,b) & Path(a,b).
}
procedure main(inputfilename, tsdelay, satdelay){
	structure = createStructureFromFile(inputfilename)
	stdoptions.groundlazily= tsdelay or satdelay
	stdoptions.tseitindelay = tsdelay
	stdoptions.satdelay = satdelay
	stdoptions.groundwithbounds=true
	stdoptions.groundverbosity=0
	stdoptions.satverbosity=0
	sol = modelexpandpartial(T, structure)
//	mx::printtuples("Connected", sol[V::Connected].ct)
//	mx::printtuples("Connected", sol[V::Connected].cf)
//	mx::printtuples("Path", sol[V::Path].ct)
//	mx::printtuples("Path", sol[V::Path].cf)
}
