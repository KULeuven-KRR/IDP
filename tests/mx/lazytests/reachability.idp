#include <mx>

vocabulary V{
	type Vtx
	Edge(Vtx,Vtx)
	Reaches(Vtx,Vtx) //the query

	Connected
	Path(Vtx, Vtx)
}
theory T:V{
	{ 
		Path(a,x) <-  Edge(a,x).
		Path(a,x) <-  Path(a,y) & Edge(y,x).
	}
	Connected <=> ?a b: Reaches(a,b) & Path(a,b).
}

procedure main(){
	stdoptions.groundlazily=true
	stdoptions.groundwithbounds=true
	stdoptions.groundverbosity=1
	stdoptions.satverbosity=1
	sol = modelexpandpartial(T, S)
	mx::printtuples("Connected", sol[V::Connected].ct)
	mx::printtuples("Connected", sol[V::Connected].cf)
	mx::printtuples("Path", sol[V::Path].ct)
	mx::printtuples("Path", sol[V::Path].cf)
}

structure S:V{