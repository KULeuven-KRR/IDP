vocabulary V{
	type Id
	type S isa int
	type X isa int
	type Y isa int
	
	Size(Id):S
	
	Pos(Id, X, Y)
}
theory T:V{	
	!id: ?x y: Pos(id, x, y).
	!id x y x2 y2: Pos(id, x, y) & Pos(id, x2, y2) => x=x2 & y=y2.
	!id id2 x x2 y y2: Pos(id, x, y) & Pos(id2, x2, y2) => id=id2 | x+Size(id)<x2 | x2+Size(id)<x  | y+Size(id)<y2 | y2+Size(id)<y.
}
structure S:V{
	Id = {1..3}
	S = {1..3}
	X = {-2147483648..-2147483600}
	Y = {-2147483648..-2147483600}
	Size = {1->3; 2->3; 3->3}
}
procedure main(){
	stdoptions.verbosity.grounding=2
	stdoptions.verbosity.solving=0
	stdoptions.groundlazily=true
	stdoptions.groundwithbounds=true
	print(modelexpandpartial(T, S))
}