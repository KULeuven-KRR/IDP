procedure getExpectedNbOfModels(){
	return 20
}

/******************
	Social Golfer 
******************/

vocabulary V{
	type Players 
	type Groups 
	type Weeks
	type Size isa int
	
	Groupsize : Size
 
	Plays(Weeks,Groups,Players)
}

theory T : V { 
	// Each golfer plays in exactly one group every week.
	! p w : ?1 g : Plays(w,g,p).

	// The number of players in each group is equal to groupsize.
	! w g : #{ p : Plays(w,g,p) } = Groupsize.

	// Each pair of players meets at most once.
	! p1 p2 : p1 ~= p2 => #{ w : ? g : Plays(w,g,p1) & Plays(w,g,p2)  } =< 1.
}

structure S : V{ 
	Players = {1..6}
	Groups = {1..2}
	Weeks = {1}
	Size = {3}
	Groupsize = 3
}