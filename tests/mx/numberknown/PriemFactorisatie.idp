vocabulary V{
	type Getal isa int
	type Aantal isa int
   
	PriemGetal(Getal)
	PriemFactor(Getal, Getal,Aantal)
}
theory T:V{
	{
		!x [Getal]: PriemGetal(x) <- ~ (?y[Getal]: y < x & y > 1 & x % y = 0).
	}
	!a x y: PriemFactor(x,y,a) => x>=y & ~PriemGetal(x) & PriemGetal(y).
	!x [Getal]: ~PriemGetal(x) => prod{y a: PriemFactor(x,y,a) :y} = x.
	
	// Symmbreker (zou nu een uniek model moeten geven):
	!a b: ~PriemFactor(a,1,b).
	! (a,b,c) in PriemFactor : c=1 | PriemFactor(a,b,c-1).
}	
structure S:V{
	Getal = { 1..11 }
	Aantal = {1..3}
}
procedure getExpectedNbOfModels(){
	return 1
}

procedure allowed(){
	// do not run this test without CP since products will exceed max int
	if 	stdoptions.cpsupport==false then
		return false
	end
	return true

}
