procedure getExpectedAModel(){
	return true
}

vocabulary V{
	type Num isa int
	Given(Num,Num,Num)
	Sudoku(Num,Num) : Num
	InBlock(Num,Num,Num)
}

theory T : V { 
	! r c n : Given(r,c,n) => Sudoku(r,c) = n.
	! r n : ?1 c : Sudoku(r,c) = n.
	! c n : ?1 r : Sudoku(r,c) = n.
	! b n : ?1 r c : InBlock(b,r,c) & Sudoku(r,c) = n.
	{ InBlock(b,r,c) <- b = ((r-1) - ((r-1) % 3)) + ((c-1) - ((c-1) % 3)) / 3 + 1. }
}

structure S : V{ 
	Num = {1..9} 

	Given = {
		1,1,1;2,2,2;3,3,3;1,4,2;2,5,3;3,6,4;1,7,3;2,8,4;3,9,5;
		4,1,6;5,2,7;6,3,8;4,4,4;5,5,5;6,6,6;4,7,5;5,8,6;6,9,7;
		7,1,8;8,2,9;9,3,1;7,4,9;8,5,1;9,6,2;7,7,7;8,8,8;9,9,4
	}
}
