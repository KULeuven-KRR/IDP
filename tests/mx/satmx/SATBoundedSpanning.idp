procedure getExpectedAModel(){
	return true
}

/*****************************************************
	Bounded spanning tree
*****************************************************/

vocabulary V{
type 	Vertex 
type  Num isa int


Bound : Num
Edge(Vertex,Vertex)

 
Root : Vertex
SpTree(Vertex,Vertex)

 
NrOfChildren(Vertex) : Num
Child(Vertex,Num) : Vertex
Reached(Vertex)

}

theory T : V { 
	//! v : NrOfChildren(v) =< Bound.
	{ SpTree(p,y) <- ?n[Num]: y = Child(p,n) & n > 0 & n =< NrOfChildren(p). }

	// Spanning tree rules:
	! (v_1 v_2) in SpTree: Edge(v_1,v_2).
	//! v : ~SpTree(v,Root).
	//! v_1 v_2 y : SpTree(v_1,y) & SpTree(v_2,y) => v_1 = v_2.

	{ 
		Reached(Root).
		Reached(c) <- SpTree(p,c) & Reached(p).
	}

	!v: Reached(v).
}

structure S : V{ 
	Num = {0..4}
	Bound = 4
	Vertex = {A..D}
	Edge = { A,B; A,C; B,C; C,D; D,B }
}
