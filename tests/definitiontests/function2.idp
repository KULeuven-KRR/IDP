vocabulary V{
	type t
	f(t):t
	q(t,t)
}

theory T:V{
	{
		!x y: f(x)=y <- q(x,y).
	}
}

structure S:V{
	t = {1..3}
	q = {1,2;2,3;3,1}
}


procedure assertions(){
	return (
		assert2multi(S[V::f].graph.ct,{{1,2},{2,3},{3,1}},"f_graphed<ct>") 
		and consistent(1)
	)
}

