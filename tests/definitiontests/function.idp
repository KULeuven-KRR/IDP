vocabulary V{
	type t
	f(t):t
	q(t)
}

theory T:V{
	{
		!x: f(x)=x <- q(x).
	}
}

structure S:V{
	t = {1..3}
	q = {1;2}
}

procedure assertions(){
	return (
		assert2multi(S[V::f].graph.ct,{{1,1},{2,2}},"f_graphed<ct>") 
		and assert2multi(S[V::f].graph.cf,{{1,2},{1,3},{2,1},{2,3},{3,1},{3,2},{3,3}},"f_graphed<cf>") 	
	)
}

