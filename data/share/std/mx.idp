namespace mx {
	/**
	 * FIXME should NEVER override the options of the user
	 *     rather, should give an error if one of the options is not the expected value?
	 * Returns a structure that is a solution to the model expansion problem with input theory T and structure S
	 */
	procedure one(T,S,Opts) {
		if (not Opts) then Opts = stdoptions end
		local oldnbmodels = Opts.nbmodels
		Opts.nbmodels = 1
		local solutions, trace = modelexpand(T,S)
		Opts.nbmodels = oldnbmodels
		return solutions[1], trace
	}

	/**
	 * Returns all solutions to the model expansion problem with input theory T and structure S
	 */
	procedure all(T,S,Opts) {
		if (not Opts) then Opts = stdoptions end
		local oldnbmodels = Opts.nbmodels
		Opts.nbmodels = 0
		local solutions, trace = modelexpand(T,S)
		Opts.nbmodels = oldnbmodels
		return solutions, trace
	}
	
	/**
	 * Prints a given list of models or unsatisfiable if the list is empty
	 */
	procedure printmodels(sols) {
		if #sols == 0 then
			print("Unsatisfiable")
		end

		print("Number of models: "..#sols)
		for k,v in ipairs(sols) do
			print("Model "..k)
			kstr = tostring(k)
			str = "======"
			for i=1,string.len(kstr) do str = str.."=" end
			print(str)
			print(v)
		end
	}
	
	/**
	 * Given a predicate name and a relationship table, prints all tuples in the table
	 */
	procedure printtuples(name, table) {
		local s = name.."<"
		for tuple in tuples(table)
		do
			begin = true
			for i,v in pairs(tuple)
			do
				if begin==false
				then
					s = s..","
				end
				begin = false
				s = s..tostring(v)
			end
			s = s..";"
		end
		s = s..">"
		print(s)
	}
}
